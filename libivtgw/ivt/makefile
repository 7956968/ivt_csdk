#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#

x86 = 1
x86_64 = 1
ifeq ($(x86_64),1)
jsonLib = libjson-x86_64.a
else
jsonLib = libjson-x86.a
endif
WORKDIR = `pwd`

ifeq ($(x86),1)
CROSS =
else
#CROSS = arm-hisiv300-linux-
CROSS = arm-hisiv100nptl-linux-
endif

CXX	=	@echo " g++ $@"; $(CROSS)g++
CC	=	@echo " gcc $@"; $(CROSS)gcc
LD	=	@echo " ld  $@"; $(CROSS)ld
AR  = @echo " ar  $@"; $(CROSS)ar
STRIP	=	@echo " strip $@"; $(CROSS)strip

#CC = gcc
#CXX = g++
#AR = ar
#LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall -fexceptions
CFLAGS += -DUCLINUX
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
ifeq ($(x86),1)
LIB_DEBUG = $(LIB)../libJson/$(jsonLib) -lpthread -lrt
else
LIB_DEBUG = $(LIB)../libJson/libjson.a -lpthread
endif
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/ivt

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
ifeq ($(x86),1)
LIB_RELEASE = $(LIB)../libJson/$(jsonLib) -lpthread -lrt
else
LIB_RELEASE = $(LIB)../libJson/libjson.a -lpthread
endif
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/ivt

OBJ_DEBUG = $(OBJDIR_DEBUG)/ivtCb.o $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/ivtRecvSend.o $(OBJDIR_DEBUG)/ivtRPCJson.o $(OBJDIR_DEBUG)/ivtRPC.o $(OBJDIR_DEBUG)/ivtProducerConsumer.o $(OBJDIR_DEBUG)/__/http/httpClient.o $(OBJDIR_DEBUG)/__/websocket/websocket.o $(OBJDIR_DEBUG)/__/websocket/util.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/ivtCb.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/ivtRecvSend.o $(OBJDIR_RELEASE)/ivtRPCJson.o $(OBJDIR_RELEASE)/ivtRPC.o $(OBJDIR_RELEASE)/ivtProducerConsumer.o $(OBJDIR_RELEASE)/__/http/httpClient.o $(OBJDIR_RELEASE)/__/websocket/websocket.o $(OBJDIR_RELEASE)/__/websocket/util.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	test -d $(OBJDIR_DEBUG)/__/http || mkdir -p $(OBJDIR_DEBUG)/__/http
	test -d $(OBJDIR_DEBUG)/__/websocket || mkdir -p $(OBJDIR_DEBUG)/__/websocket

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(CXX) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/ivtCb.o: ivtCb.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ivtCb.cpp -o $(OBJDIR_DEBUG)/ivtCb.o

$(OBJDIR_DEBUG)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/ivtRecvSend.o: ivtRecvSend.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ivtRecvSend.cpp -o $(OBJDIR_DEBUG)/ivtRecvSend.o

$(OBJDIR_DEBUG)/ivtRPCJson.o: ivtRPCJson.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ivtRPCJson.cpp -o $(OBJDIR_DEBUG)/ivtRPCJson.o

$(OBJDIR_DEBUG)/ivtRPC.o: ivtRPC.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ivtRPC.cpp -o $(OBJDIR_DEBUG)/ivtRPC.o

$(OBJDIR_DEBUG)/ivtProducerConsumer.o: ivtProducerConsumer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ivtProducerConsumer.cpp -o $(OBJDIR_DEBUG)/ivtProducerConsumer.o

$(OBJDIR_DEBUG)/__/http/httpClient.o: ../http/httpClient.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../http/httpClient.c -o $(OBJDIR_DEBUG)/__/http/httpClient.o

$(OBJDIR_DEBUG)/__/websocket/websocket.o: ../websocket/websocket.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../websocket/websocket.c -o $(OBJDIR_DEBUG)/__/websocket/websocket.o

$(OBJDIR_DEBUG)/__/websocket/util.o: ../websocket/util.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../websocket/util.c -o $(OBJDIR_DEBUG)/__/websocket/util.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)/__/http
	rm -rf $(OBJDIR_DEBUG)/__/websocket

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE)/__/http || mkdir -p $(OBJDIR_RELEASE)/__/http
	test -d $(OBJDIR_RELEASE)/__/websocket || mkdir -p $(OBJDIR_RELEASE)/__/websocket

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(CXX) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/ivtCb.o: ivtCb.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ivtCb.cpp -o $(OBJDIR_RELEASE)/ivtCb.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/ivtRecvSend.o: ivtRecvSend.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ivtRecvSend.cpp -o $(OBJDIR_RELEASE)/ivtRecvSend.o

$(OBJDIR_RELEASE)/ivtRPCJson.o: ivtRPCJson.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ivtRPCJson.cpp -o $(OBJDIR_RELEASE)/ivtRPCJson.o

$(OBJDIR_RELEASE)/ivtRPC.o: ivtRPC.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ivtRPC.cpp -o $(OBJDIR_RELEASE)/ivtRPC.o

$(OBJDIR_RELEASE)/ivtProducerConsumer.o: ivtProducerConsumer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ivtProducerConsumer.cpp -o $(OBJDIR_RELEASE)/ivtProducerConsumer.o

$(OBJDIR_RELEASE)/__/http/httpClient.o: ../http/httpClient.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../http/httpClient.c -o $(OBJDIR_RELEASE)/__/http/httpClient.o

$(OBJDIR_RELEASE)/__/websocket/websocket.o: ../websocket/websocket.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../websocket/websocket.c -o $(OBJDIR_RELEASE)/__/websocket/websocket.o

$(OBJDIR_RELEASE)/__/websocket/util.o: ../websocket/util.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../websocket/util.c -o $(OBJDIR_RELEASE)/__/websocket/util.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/__/http
	rm -rf $(OBJDIR_RELEASE)/__/websocket

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

